name: main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./OutputService/OutputService
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./OutputService/OutputService

  docker-build-push-development:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./OutputService/OutputService
        file: ./docker/Dockerfile
        push: true
        tags: liamvaessen/unitgenius-outputservice:development

  integration-tests:
    runs-on: ubuntu-latest
    needs: docker-build-push-development
    steps:
    - uses: actions/checkout@v4
    - name: Checkout docker-compose and Postman files from central public enable repository
      uses: actions/checkout@v2
      with:
        repository: liamvaessen/unitgenius
        path: ./external-files
    - name: Docker Compose up
      run: docker-compose -f ./external-files/docker/docker-compose.yml up -d
      env:
        RABBITMQ_USER: ${{ secrets.RABBITMQ_USERNAME }}
        RABBITMQ_PASS: ${{ secrets.RABBITMQ_PASSWORD }}
    - name: Wait for services to start
      run: sleep 100
    - name: Print Docker Compose logs
      run: docker-compose -f ./external-files/docker/docker-compose.yml logs unitgenius-outputservice
    - name: Install Postman CLI
      run: |
        curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
    - name: Login to Postman CLI
      run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
    - name: Run Postman integration tests for UnitGenius
      run: postman collection run "./external-files/test/integration-tests/UnitGenius.postman_collection.json" --integration-id "161360-${{ github.run_id }}"
    - name: Print Docker Compose logs
      if: always()
      run: docker-compose -f ./external-files/docker/docker-compose.yml logs
    - name: Docker Compose down
      run: docker-compose -f ./external-files/docker/docker-compose.yml down

  docker-build-push-latest:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
    - uses: actions/checkout@v4
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./OutputService/OutputService
        file: ./docker/Dockerfile
        push: true
        tags: liamvaessen/unitgenius-outputservice:latest
